[
  {
    "objectID": "posts/Intro_R.html",
    "href": "posts/Intro_R.html",
    "title": "Bioinformatics Tutorial Part 1",
    "section": "",
    "text": "Bioinformatics self study\nWith this series of scripts you can work at your own pace to try out some of the code that is needed to import, plot and analyze data in R.\n\n\n1. How to get going in R\n\n1.1 Installing packages on to your computer\nPackages contain libraries with data, functions, code etc. You want to install packages at the beginning of your script. They stay on your computer, even when you close your R session.R will inform you, when you attempt to code a function, for which you do not have the package for. Packages can also be installed via the Install button within the Packages rider on the bottom right corner or over the Tools button.\n\n\nCode\ninstall.packages(\"tidyverse\")\ninstall.packages(\"dplyr\")\ninstall.packages(\"ggpubr\")\ninstall.packages(\"GGally\")\ninstall.packages(\"skimr\")\ninstall.packages(\"ggplot2\")\ninstall.packages(\"ggfortify\")\ninstall.packages(\"ggfortify\")\n\n\n\n\n1.2 Loading a library into your working file\nWhen you have installed a package, you have to load it into your current R session. This has to be done every time you open R new. This can also be done by checking the boxes in the Packages rider.\n\n\nCode\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(ggpubr)\nlibrary(GGally)\nlibrary(skimr)\nlibrary(ggplot2)\nlibrary(ggfortify)\n\n\n\n\n1.3 How to get information on packages\n\n\nCode\n?dplyr\n??dplyr\n\n\n\n\n\n2. How to import data into R\nIn R, the main goal is to work with data. So we have to import data into the session. This can be done either with data files from your computer or other source, or (for training purposes) you can import data from the packages. This can be very valuable to learn how to wrangle the data and how to make plots.\n\n2.1 Importing and looking at data from a CSV file from your Computer\n\n\nCode\ngetwd() #get the current working directory\nsetwd() #change working directory to somwhere else\n\n\n\n\nCode\nbodyfat &lt;- read_csv(\"C:/Users/vf22a541/OneDrive - Universitaet Bern/Bioinformatics Tutorial/datasets/bodyfat.csv\") #Imports the data frame from a location on your computer with readr function\n\nView(bodyfat) #Display the data frame\n\nstr(bodyfat) #Display dimensions of data frame and types of variables\n\n\nspc_tbl_ [243 × 19] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Nr     : num [1:243] 1 2 3 4 5 6 7 8 9 10 ...\n $ density: num [1:243] 1.07 1.09 1.04 1.08 1.03 ...\n $ bodyfat: num [1:243] 12.3 6.1 25.3 10.4 28.7 20.9 19.2 12.4 4.1 11.7 ...\n $ age    : num [1:243] 23 22 22 26 24 24 26 25 25 23 ...\n $ weight : num [1:243] 154 173 154 185 184 ...\n $ height : num [1:243] 67.8 72.2 66.2 72.2 71.2 ...\n $ neck   : num [1:243] 36.2 38.5 34 37.4 34.4 39 36.4 37.8 38.1 42.1 ...\n $ chest  : num [1:243] 93.1 93.6 95.8 101.8 97.3 ...\n $ abdomen: num [1:243] 85.2 83 87.9 86.4 100 94.4 90.7 88.5 82.5 88.6 ...\n $ hip    : num [1:243] 94.5 98.7 99.2 101.2 101.9 ...\n $ thigh  : num [1:243] 59 58.7 59.6 60.1 63.2 66 58.4 60 62.9 63.1 ...\n $ knee   : num [1:243] 37.3 37.3 38.9 37.3 42.2 42 38.3 39.4 38.3 41.7 ...\n $ ankle  : num [1:243] 21.9 23.4 24 22.8 24 25.6 22.9 23.2 23.8 25 ...\n $ biceps : num [1:243] 32 30.5 28.8 32.4 32.2 35.7 31.9 30.5 35.9 35.6 ...\n $ forearm: num [1:243] 27.4 28.9 25.2 29.4 27.7 30.6 27.8 29 31.1 30 ...\n $ wrist  : num [1:243] 17.1 18.2 16.6 18.2 17.7 18.8 17.7 18.8 18.2 19.2 ...\n $ gewicht: num [1:243] 70 78.7 69.9 83.9 83.7 ...\n $ hoehe  : num [1:243] 172 184 168 184 181 ...\n $ bmi    : num [1:243] 23.6 23.4 24.7 24.9 25.5 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Nr = col_double(),\n  ..   density = col_double(),\n  ..   bodyfat = col_double(),\n  ..   age = col_double(),\n  ..   weight = col_double(),\n  ..   height = col_double(),\n  ..   neck = col_double(),\n  ..   chest = col_double(),\n  ..   abdomen = col_double(),\n  ..   hip = col_double(),\n  ..   thigh = col_double(),\n  ..   knee = col_double(),\n  ..   ankle = col_double(),\n  ..   biceps = col_double(),\n  ..   forearm = col_double(),\n  ..   wrist = col_double(),\n  ..   gewicht = col_double(),\n  ..   hoehe = col_double(),\n  ..   bmi = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\nCode\nsummary(bodyfat) #Types of Variables and little statistic\n\n\n       Nr           density         bodyfat           age       \n Min.   :  1.0   Min.   :0.995   Min.   : 0.70   Min.   :22.00  \n 1st Qu.: 65.5   1st Qu.:1.042   1st Qu.:12.50   1st Qu.:35.50  \n Median :129.0   Median :1.055   Median :19.20   Median :43.00  \n Mean   :128.0   Mean   :1.056   Mean   :19.11   Mean   :44.83  \n 3rd Qu.:191.5   3rd Qu.:1.070   3rd Qu.:25.20   3rd Qu.:54.00  \n Max.   :252.0   Max.   :1.098   Max.   :47.50   Max.   :81.00  \n     weight          height           neck           chest      \n Min.   :125.0   Min.   :64.00   Min.   :31.10   Min.   : 83.4  \n 1st Qu.:159.2   1st Qu.:68.38   1st Qu.:36.40   1st Qu.: 94.5  \n Median :176.2   Median :70.00   Median :38.00   Median : 99.6  \n Mean   :178.2   Mean   :70.29   Mean   :37.96   Mean   :100.7  \n 3rd Qu.:196.8   3rd Qu.:72.25   3rd Qu.:39.40   3rd Qu.:105.3  \n Max.   :262.8   Max.   :77.50   Max.   :43.90   Max.   :128.3  \n    abdomen            hip             thigh           knee      \n Min.   : 70.40   Min.   : 85.30   Min.   :49.3   Min.   :33.00  \n 1st Qu.: 84.90   1st Qu.: 95.55   1st Qu.:56.1   1st Qu.:36.90  \n Median : 91.00   Median : 99.30   Median :59.0   Median :38.50  \n Mean   : 92.38   Mean   : 99.69   Mean   :59.3   Mean   :38.54  \n 3rd Qu.: 99.15   3rd Qu.:103.15   3rd Qu.:62.3   3rd Qu.:39.85  \n Max.   :126.20   Max.   :125.60   Max.   :72.9   Max.   :46.00  \n     ankle          biceps         forearm          wrist      \n Min.   :19.1   Min.   :24.80   Min.   :21.00   Min.   :15.80  \n 1st Qu.:22.0   1st Qu.:30.25   1st Qu.:27.30   1st Qu.:17.60  \n Median :22.8   Median :32.00   Median :28.80   Median :18.30  \n Mean   :23.0   Mean   :32.24   Mean   :28.68   Mean   :18.22  \n 3rd Qu.:24.0   3rd Qu.:34.35   3rd Qu.:30.00   3rd Qu.:18.80  \n Max.   :27.0   Max.   :39.10   Max.   :34.90   Max.   :21.40  \n    gewicht           hoehe            bmi       \n Min.   : 56.75   Min.   :162.6   Min.   :19.06  \n 1st Qu.: 72.30   1st Qu.:173.7   1st Qu.:23.07  \n Median : 80.02   Median :177.8   Median :25.10  \n Mean   : 80.91   Mean   :178.5   Mean   :25.34  \n 3rd Qu.: 89.32   3rd Qu.:183.5   3rd Qu.:27.34  \n Max.   :119.29   Max.   :196.8   Max.   :39.12  \n\n\nCode\nhead(bodyfat) #Displays the first few rows of the data frame\n\n\n# A tibble: 6 × 19\n     Nr density bodyfat   age weight height  neck chest abdomen   hip thigh\n  &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     1    1.07    12.3    23   154.   67.8  36.2  93.1    85.2  94.5  59  \n2     2    1.09     6.1    22   173.   72.2  38.5  93.6    83    98.7  58.7\n3     3    1.04    25.3    22   154    66.2  34    95.8    87.9  99.2  59.6\n4     4    1.08    10.4    26   185.   72.2  37.4 102.     86.4 101.   60.1\n5     5    1.03    28.7    24   184.   71.2  34.4  97.3   100   102.   63.2\n6     6    1.05    20.9    24   210.   74.8  39   104.     94.4 108.   66  \n# ℹ 8 more variables: knee &lt;dbl&gt;, ankle &lt;dbl&gt;, biceps &lt;dbl&gt;, forearm &lt;dbl&gt;,\n#   wrist &lt;dbl&gt;, gewicht &lt;dbl&gt;, hoehe &lt;dbl&gt;, bmi &lt;dbl&gt;\n\n\nCode\nskim(bodyfat) #Shows very nice summary of the data with distribution\n\n\n\nData summary\n\n\nName\nbodyfat\n\n\nNumber of rows\n243\n\n\nNumber of columns\n19\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nnumeric\n19\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nNr\n0\n1\n128.02\n73.09\n1.00\n65.50\n129.00\n191.50\n252.00\n▇▇▇▇▇\n\n\ndensity\n0\n1\n1.06\n0.02\n1.00\n1.04\n1.05\n1.07\n1.10\n▁▃▇▇▂\n\n\nbodyfat\n0\n1\n19.11\n8.19\n0.70\n12.50\n19.20\n25.20\n47.50\n▃▇▇▂▁\n\n\nage\n0\n1\n44.83\n12.65\n22.00\n35.50\n43.00\n54.00\n81.00\n▅▇▇▂▁\n\n\nweight\n0\n1\n178.20\n26.65\n125.00\n159.25\n176.25\n196.75\n262.75\n▃▇▅▂▁\n\n\nheight\n0\n1\n70.29\n2.58\n64.00\n68.38\n70.00\n72.25\n77.50\n▂▇▇▅▁\n\n\nneck\n0\n1\n37.96\n2.28\n31.10\n36.40\n38.00\n39.40\n43.90\n▁▃▇▅▁\n\n\nchest\n0\n1\n100.73\n8.01\n83.40\n94.50\n99.60\n105.30\n128.30\n▃▇▆▂▁\n\n\nabdomen\n0\n1\n92.38\n10.07\n70.40\n84.90\n91.00\n99.15\n126.20\n▂▇▆▂▁\n\n\nhip\n0\n1\n99.69\n6.37\n85.30\n95.55\n99.30\n103.15\n125.60\n▂▇▅▁▁\n\n\nthigh\n0\n1\n59.30\n4.78\n49.30\n56.10\n59.00\n62.30\n72.90\n▃▇▇▃▁\n\n\nknee\n0\n1\n38.54\n2.30\n33.00\n36.90\n38.50\n39.85\n46.00\n▂▇▇▂▁\n\n\nankle\n0\n1\n23.00\n1.34\n19.10\n22.00\n22.80\n24.00\n27.00\n▁▅▇▅▁\n\n\nbiceps\n0\n1\n32.24\n2.92\n24.80\n30.25\n32.00\n34.35\n39.10\n▁▆▇▆▂\n\n\nforearm\n0\n1\n28.68\n2.02\n21.00\n27.30\n28.80\n30.00\n34.90\n▁▂▇▆▁\n\n\nwrist\n0\n1\n18.22\n0.91\n15.80\n17.60\n18.30\n18.80\n21.40\n▂▆▇▂▁\n\n\ngewicht\n0\n1\n80.91\n12.10\n56.75\n72.30\n80.02\n89.32\n119.29\n▃▇▅▂▁\n\n\nhoehe\n0\n1\n178.54\n6.56\n162.56\n173.68\n177.80\n183.52\n196.85\n▂▇▇▅▁\n\n\nbmi\n0\n1\n25.34\n3.31\n19.06\n23.08\n25.10\n27.34\n39.12\n▅▇▃▁▁\n\n\n\n\n\n\n\n2.2 Open data from a package\n\n\nCode\n# Browse built-in datasets in R\ndata()\n\n\n\n\nCode\n#Shows dataset in console\nmtcars\n\n\n                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nMazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2\nValiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\nDuster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4\nMerc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2\nMerc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2\nMerc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4\nMerc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4\nMerc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3\nMerc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3\nMerc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3\nCadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4\nLincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4\nChrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4\nFiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nToyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nToyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1\nDodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2\nAMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2\nCamaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4\nPontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2\nFiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nPorsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nLotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2\nFord Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4\nFerrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6\nMaserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8\nVolvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2\n\n\n\n\nCode\n#Shows the first few rows in dataset\nhead(mtcars)\n\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n\n\n\n\nCode\n#select columns in a dataframe using their names\nselect(mtcars, hp)\n\n\n                     hp\nMazda RX4           110\nMazda RX4 Wag       110\nDatsun 710           93\nHornet 4 Drive      110\nHornet Sportabout   175\nValiant             105\nDuster 360          245\nMerc 240D            62\nMerc 230             95\nMerc 280            123\nMerc 280C           123\nMerc 450SE          180\nMerc 450SL          180\nMerc 450SLC         180\nCadillac Fleetwood  205\nLincoln Continental 215\nChrysler Imperial   230\nFiat 128             66\nHonda Civic          52\nToyota Corolla       65\nToyota Corona        97\nDodge Challenger    150\nAMC Javelin         150\nCamaro Z28          245\nPontiac Firebird    175\nFiat X1-9            66\nPorsche 914-2        91\nLotus Europa        113\nFord Pantera L      264\nFerrari Dino        175\nMaserati Bora       335\nVolvo 142E          109\n\n\n\n\nCode\n#transform table into data frame if necessary\ndata(\"HairEyeColor\")\ndf &lt;- as.data.frame(HairEyeColor)\n#?HairEyeColor\n\n\n\n\n2.3 Organize the data in a way that it is useful for further analysis\n\nSubset columns using their names and types\n\n\nCode\nselect(mtcars, c(mpg, wt, cyl)) #either just to look at it (displayed in the script)\n\n\n                     mpg    wt cyl\nMazda RX4           21.0 2.620   6\nMazda RX4 Wag       21.0 2.875   6\nDatsun 710          22.8 2.320   4\nHornet 4 Drive      21.4 3.215   6\nHornet Sportabout   18.7 3.440   8\nValiant             18.1 3.460   6\nDuster 360          14.3 3.570   8\nMerc 240D           24.4 3.190   4\nMerc 230            22.8 3.150   4\nMerc 280            19.2 3.440   6\nMerc 280C           17.8 3.440   6\nMerc 450SE          16.4 4.070   8\nMerc 450SL          17.3 3.730   8\nMerc 450SLC         15.2 3.780   8\nCadillac Fleetwood  10.4 5.250   8\nLincoln Continental 10.4 5.424   8\nChrysler Imperial   14.7 5.345   8\nFiat 128            32.4 2.200   4\nHonda Civic         30.4 1.615   4\nToyota Corolla      33.9 1.835   4\nToyota Corona       21.5 2.465   4\nDodge Challenger    15.5 3.520   8\nAMC Javelin         15.2 3.435   8\nCamaro Z28          13.3 3.840   8\nPontiac Firebird    19.2 3.845   8\nFiat X1-9           27.3 1.935   4\nPorsche 914-2       26.0 2.140   4\nLotus Europa        30.4 1.513   4\nFord Pantera L      15.8 3.170   8\nFerrari Dino        19.7 2.770   6\nMaserati Bora       15.0 3.570   8\nVolvo 142E          21.4 2.780   4\n\n\nCode\nmtcars_2 &lt;- select(mtcars, mpg, wt, cyl) #or assign it to a new object\nselect(mtcars, 2:4)\n\n\n                    cyl  disp  hp\nMazda RX4             6 160.0 110\nMazda RX4 Wag         6 160.0 110\nDatsun 710            4 108.0  93\nHornet 4 Drive        6 258.0 110\nHornet Sportabout     8 360.0 175\nValiant               6 225.0 105\nDuster 360            8 360.0 245\nMerc 240D             4 146.7  62\nMerc 230              4 140.8  95\nMerc 280              6 167.6 123\nMerc 280C             6 167.6 123\nMerc 450SE            8 275.8 180\nMerc 450SL            8 275.8 180\nMerc 450SLC           8 275.8 180\nCadillac Fleetwood    8 472.0 205\nLincoln Continental   8 460.0 215\nChrysler Imperial     8 440.0 230\nFiat 128              4  78.7  66\nHonda Civic           4  75.7  52\nToyota Corolla        4  71.1  65\nToyota Corona         4 120.1  97\nDodge Challenger      8 318.0 150\nAMC Javelin           8 304.0 150\nCamaro Z28            8 350.0 245\nPontiac Firebird      8 400.0 175\nFiat X1-9             4  79.0  66\nPorsche 914-2         4 120.3  91\nLotus Europa          4  95.1 113\nFord Pantera L        8 351.0 264\nFerrari Dino          6 145.0 175\nMaserati Bora         8 301.0 335\nVolvo 142E            4 121.0 109\n\n\n\n\nCreate, modify, and delete columns\n\n\nCode\nmutate(mtcars, mpg_log = log(mpg)) #add a column with the mpg variable log transformed\n\n\n                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nMazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2\nValiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\nDuster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4\nMerc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2\nMerc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2\nMerc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4\nMerc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4\nMerc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3\nMerc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3\nMerc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3\nCadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4\nLincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4\nChrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4\nFiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nToyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nToyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1\nDodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2\nAMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2\nCamaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4\nPontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2\nFiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nPorsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nLotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2\nFord Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4\nFerrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6\nMaserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8\nVolvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2\n                     mpg_log\nMazda RX4           3.044522\nMazda RX4 Wag       3.044522\nDatsun 710          3.126761\nHornet 4 Drive      3.063391\nHornet Sportabout   2.928524\nValiant             2.895912\nDuster 360          2.660260\nMerc 240D           3.194583\nMerc 230            3.126761\nMerc 280            2.954910\nMerc 280C           2.879198\nMerc 450SE          2.797281\nMerc 450SL          2.850707\nMerc 450SLC         2.721295\nCadillac Fleetwood  2.341806\nLincoln Continental 2.341806\nChrysler Imperial   2.687847\nFiat 128            3.478158\nHonda Civic         3.414443\nToyota Corolla      3.523415\nToyota Corona       3.068053\nDodge Challenger    2.740840\nAMC Javelin         2.721295\nCamaro Z28          2.587764\nPontiac Firebird    2.954910\nFiat X1-9           3.306887\nPorsche 914-2       3.258097\nLotus Europa        3.414443\nFord Pantera L      2.760010\nFerrari Dino        2.980619\nMaserati Bora       2.708050\nVolvo 142E          3.063391\n\n\n\n\nSubset rows using column values\n\n\nCode\nfilter(mtcars, mpg == max(mpg)) #just to find out whats the max\n\n\n                mpg cyl disp hp drat    wt qsec vs am gear carb\nToyota Corolla 33.9   4 71.1 65 4.22 1.835 19.9  1  1    4    1\n\n\nCode\nmtcars_over20mpg &lt;- filter(mtcars, mpg &gt;= 20) #or again assign to a new object\nmtcars %&gt;% filter(disp &gt; mean(disp, na.rm = T))\n\n\n                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nHornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2\nDuster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4\nMerc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3\nMerc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3\nMerc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3\nCadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4\nLincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4\nChrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4\nDodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2\nAMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2\nCamaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4\nPontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2\nFord Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4\nMaserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8\n\n\n\n\nArrange rows by column values\n\n\nCode\nmax_cyl &lt;- arrange(mtcars, desc(cyl)) #arrange a colum in descending order\n\n\n\n\n\n\n3. Making plots in R\nQuick plots with the plot(), hist() function is very easy and quick. The plots reach a creative limit, where other packages such as ggplot2 or gpubr will produce much nicer graphs for puplications.\n\n\nCode\nhist(bodyfat$density) #A histogram of the bodyfat data\n\n\n\n\n\nCode\nhist(mtcars$mpg) # A histogram of the mtcars data\n\n\n\n\n\nCode\nplot(mtcars$mpg, mtcars$hp) # A Scatterplot of the mtcars data\n\n\n\n\n\nCode\nhist(mtcars$mpg) # A histogram of the mtcars data\n\n\n\n\n\nCode\nplot(mtcars$mpg, mtcars$hp) # A Scatterplot of the mtcars data\n\n\n\n\n\nCode\nplot(mtcars$mpg, mtcars$disp)\n\n\n\n\n\nCode\n# Transformation of variables\nmtcars &lt;- mtcars %&gt;% mutate(disp_log = log(disp))\nplot(mtcars$mpg, mtcars$disp_log)\n\n\n\n\n\nCode\n# Continous variables mpg and wt\nplot(x = mtcars$mpg, y = mtcars$wt)\n\n\n\n\n\nCode\nhist(mtcars$mpg)\n\n\n\n\n\nCode\nhist(mtcars$wt)\n\n\n\n\n\nCode\n#plotting all variables against each other gives a base for hypothesis\nggpairs(mtcars)\n\n\n\n\n\n\n\n\nReuseThis file is licensed under CC BY 4.0"
  },
  {
    "objectID": "Listings.html",
    "href": "Listings.html",
    "title": "Analyses",
    "section": "",
    "text": "Initial Exploratory Analysis of deer-derived SARS-CoV-2 Sequences\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nVera Flück\n\n\n\n\n\n\n  \n\n\n\n\nBioinformatics Tutorial Part 1\n\n\n\n\n\n\ncode\n\n\nR\n\n\nTutorial\n\n\n\n\n\n\n\n\n\n\n\nApr 24, 2024\n\n\nVera Flück\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Vera Flück",
    "section": "",
    "text": "Hello, my name is Vera. I am a Bioinformatician working at the University of Bern. I’m here to tell you all about my PhD project. I will write little Blog posts about Analyses I do, Books I read, Things I learn. I hope you have fun exploring the page."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "What is this about?",
    "section": "",
    "text": "I made this website as a little experiment, to report results of my PhD, and just to learn a new thing.\nMy PhD project is about viruses, deer, camels and bioinformatics."
  },
  {
    "objectID": "posts/Analysis.html",
    "href": "posts/Analysis.html",
    "title": "Initial Exploratory Analysis of deer-derived SARS-CoV-2 Sequences",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(readr)\nlibrary(tidyr)\nlibrary(stringr)\nlibrary(ggplot2)"
  },
  {
    "objectID": "posts/Analysis.html#libraries-needed-for-this-analysis",
    "href": "posts/Analysis.html#libraries-needed-for-this-analysis",
    "title": "Initial Exploratory Analysis of deer-derived SARS-CoV-2 Sequences",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(readr)\nlibrary(tidyr)\nlibrary(stringr)\nlibrary(ggplot2)"
  },
  {
    "objectID": "posts/Analysis.html#data-wrangling---import-variant-assignment",
    "href": "posts/Analysis.html#data-wrangling---import-variant-assignment",
    "title": "Initial Exploratory Analysis of deer-derived SARS-CoV-2 Sequences",
    "section": "Data wrangling - import, variant-assignment",
    "text": "Data wrangling - import, variant-assignment\n\n\nCode\ndeer_sars2 &lt;- read_delim(\"C:/Users/vf22a541/OneDrive - Universitaet Bern/SARS-CoV-2_deer/VF_analysis/deer_sars_cov2/data_gisaid/gisaid_hcov-19_2024_04_16_14.tsv\", \n                                           delim = \"\\t\", escape_double = FALSE, \n                                           trim_ws = TRUE)\n\n\ndeer_sars2 &lt;- separate_wider_delim(deer_sars2, cols = Location, delim = \"/ \", names = c(\"region\", \"country\", \"state\",\"county\"), too_few = \"debug\")\ndeer_sars2[\"state\"][deer_sars2[\"state\"] == \"New York \"] &lt;- \"New York\" #Two entries of new york with additional space\ndeer_sars2 &lt;- deer_sars2[,-8:-11] #get rid of columns\ndeer_sars2 &lt;- deer_sars2 %&gt;% relocate(`Collection date`, .before = `Accession ID`)\n\n\ndeer_sars2$`Virus name` &lt;- paste0(deer_sars2$`Virus name`, \"|\", deer_sars2$`Accession ID`)\ndeer_sars2$`Virus name` &lt;- paste0(deer_sars2$`Virus name`, \"|\", deer_sars2$`Collection date`)\n\n\n#add VOC\n\ndeer_sars2 &lt;- deer_sars2 %&gt;% mutate(VOC = case_when(Lineage == 'B.1' ~ \"B.1\",\n                                                    Lineage == 'B.1.2' ~ \"B.1.2\",\n                                                    Lineage == \"B.1.234\" ~ \"B.1.234\",\n                                                    Lineage == 'B.1.617.2' ~ \"Delta\",\n                                                    Lineage == \"B.1.240\" ~ \"B.1.240\",\n                                                    Lineage == \"B.1.641\" ~ \"B.1.641\",\n                                                    Lineage == \"B.1.582\" ~ \"B.1.582\",\n                                                    Lineage == \"B.1.595\" ~ \"B.1.595\",\n                                                    Lineage == \"B.1.240\" ~ \"B.1.240\",\n                                                    grepl(\"AY\", Lineage) ~ \"Delta\",\n                                                    Lineage ==             \"BA.1\"~ \"Omicron\",\n                                                    Lineage ==             \"BA.1.1\"~ \"Omicron\",\n                                                    Lineage ==             \"B.1.1.529\"~ \"Omicron\",\n                                                    Lineage ==             \"BA.2\"~ \"Omicron\",\n                                                    Lineage ==             \"XBB\"~ \"Omicron\",\n                                                    Lineage ==             \"XBB.1\"~ \"Omicron\",\n                                                    Lineage ==             \"XBB.1.5\"~ \"Omicron\",\n                                                    Lineage ==             \"XBB.1.16\" ~ \"Omicron\",\n                                                    Lineage == 'B.1.526'~ \"Iota\",\n                                                    Lineage ==             'B.1.526.1'~ \"Iota\",\n                                                    Lineage ==             'B.1.526.2'~ \"Iota\",\n                                                    Lineage ==             'B.1.526.3' ~ \"Iota\",\n                                                    Lineage == 'B.1.351'~ \"Beta\",\n                                                    Lineage ==             'B.1.351.1'~ \"Beta\",\n                                                    Lineage ==             'B.1.351.2'~ \"Beta\",\n                                                    Lineage ==             'B.1.351.3'~ \"Beta\",\n                                                    Lineage ==             'B.1.351.4'~ \"Beta\",\n                                                    Lineage ==             'B.1.351.5' ~ \"Beta\",\n                                                    Lineage == 'P.1'~ \"Gamma\",\n                                                    Lineage ==             'P.1.1'~ \"Gamma\",\n                                                    Lineage ==             'P.1.2'~ \"Gamma\",\n                                                    Lineage ==             'P.1.3'~ \"Gamma\",\n                                                    Lineage ==             'P.1.4'~ \"Gamma\",\n                                                    Lineage ==             'P.1.5'~ \"Gamma\",\n                                                    Lineage ==             'P.1.6'~ \"Gamma\",\n                                                    Lineage ==             'P.1.7'~ \"Gamma\",\n                                                    Lineage ==             'P.1.7.1'~ \"Gamma\",\n                                                    Lineage ==             'P.1.8'~ \"Gamma\",\n                                                    Lineage ==             'P.1.9'~ \"Gamma\",\n                                                    Lineage ==             'P.1.10'~ \"Gamma\",\n                                                    Lineage ==            'P.1.10.1'~ \"Gamma\",\n                                                    Lineage ==             'P.1.10.2'~ \"Gamma\",\n                                                    Lineage ==             'P.1.11'~ \"Gamma\",\n                                                    Lineage ==             'P.1.12'~ \"Gamma\",\n                                                    Lineage ==             'P.1.12.1'~ \"Gamma\",\n                                                    Lineage ==             'P.1.13'~ \"Gamma\",\n                                                    Lineage ==             'P.1.14'~ \"Gamma\",\n                                                    Lineage ==             'P.1.15'~ \"Gamma\",\n                                                    Lineage ==             'P.1.16'~ \"Gamma\",\n                                                    Lineage ==             'P.1.17'~ \"Gamma\",\n                                                    Lineage ==             'P.1.17.1' ~ \"Gamma\",\n                                                    Lineage == 'B.1.525' ~ \"Eta\",\n                                                    Lineage == 'B.1.1.7'~ \"Alpha\",\n                                                    Lineage ==             'Q.1'~ \"Alpha\",\n                                                    Lineage ==            'Q.2'~ \"Alpha\",\n                                                    Lineage ==             'Q.3'~ \"Alpha\",\n                                                    Lineage ==             'Q.4'~ \"Alpha\",\n                                                    Lineage ==             'Q.5'~ \"Alpha\",\n                                                    Lineage ==             'Q.6'~ \"Alpha\",\n                                                    Lineage ==             'Q.7'~ \"Alpha\",\n                                                    Lineage ==             'Q.8' ~ \"Alpha\",\n                                                    Lineage == 'B.1.429'~ \"Epsilon\",\n                                                    Lineage ==             'B.1.429.1'~ \"Epsilon\",\n                                                    Lineage ==             'B.1.427' ~ \"Epsilon\",\n                                                    Lineage == 'B.1.621'~\"Mu\",\n                                                    Lineage ==             'B.1.621.1'~\"Mu\",\n                                                    Lineage ==             'B.1.621.2'~\"Mu\",\n                                                    Lineage ==            'BB.1'~\"Mu\",\n                                                    Lineage ==             'BB.2' ~ \"Mu\",\n                                                    Lineage == 'C.37'~ \"Lambda\",\n                                                    Lineage ==             'C.37.1' ~ \"Lambda\",\n                                                    Lineage == \"B.1.311\" ~ \"B.1.311\"))"
  },
  {
    "objectID": "posts/Analysis.html#visualizations",
    "href": "posts/Analysis.html#visualizations",
    "title": "Initial Exploratory Analysis of deer-derived SARS-CoV-2 Sequences",
    "section": "Visualizations",
    "text": "Visualizations\n\n\n\n\nCode\ndeer_sars2 %&gt;% \n  ggplot(aes(x=state, fill=country)) +\n  geom_bar() +\n  ylab(\"Deer-derived SARS-CoV-2 Sequences\")+\n  theme_classic()+\n  theme(axis.text.x = element_text(angle=45, hjust=1, size=15),\n        axis.text.y = element_text(size = 12),\n        axis.title.x = element_blank(),\n        axis.title.y = element_text(vjust = 2, size = 16),\n        legend.text = element_text(size = 15),\n        legend.title = element_blank())"
  },
  {
    "objectID": "posts/Analysis.html#section-1",
    "href": "posts/Analysis.html#section-1",
    "title": "Initial Exploratory Analysis of deer-derived SARS-CoV-2 Sequences",
    "section": "",
    "text": "Code\ndeer_sars2 %&gt;% \n  ggplot(aes(x=state, fill=VOC)) +\n  geom_bar() +\n  ylab(\"Deer-derived SARS-CoV-2 Sequences\")+\n  theme_classic()+\n  theme(axis.text.x = element_text(angle=45, hjust=1, size=15),\n        axis.text.y = element_text(size = 12),\n        axis.title.x = element_blank(),\n        axis.title.y = element_text(vjust = 2, size = 16),\n        legend.text = element_text(size = 15),\n        legend.title = element_blank())"
  },
  {
    "objectID": "posts/Analysis.html#visualization-of-deer-derived-sars-cov-2-statistics",
    "href": "posts/Analysis.html#visualization-of-deer-derived-sars-cov-2-statistics",
    "title": "Initial Exploratory Analysis of deer-derived SARS-CoV-2 Sequences",
    "section": "Visualization of Deer-derived SARS-CoV-2 Statistics",
    "text": "Visualization of Deer-derived SARS-CoV-2 Statistics\n\n\nCode\ndeer_sars2 %&gt;%\n  ggplot(aes(x=`Collection date`,fill=VOC))+\n  geom_histogram(binwidth = 5)+\n  scale_x_date(date_breaks = \"2 weeks\")+\n  ylab(\"Deer-derived SARS-CoV-2 Sequences\")+\n  theme_classic()+\n  theme(axis.text.x = element_text(angle=45, hjust=1, size=15),\n        axis.text.y = element_text(size = 12),\n        axis.title.x = element_blank(),\n        axis.title.y = element_text(vjust = 2, size = 16),\n        legend.text = element_text(size = 15),\n        legend.title = element_blank())"
  }
]